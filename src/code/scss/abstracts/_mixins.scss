// Media Queries
@mixin minmedia($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin maxmedia($screen) {
  @media (max-width: $screen) {
    @content;
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
  gap: $gap;
}

// Grid
@mixin grid($columns: 12, $gap: $grid-gutter-width) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Position
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Link Hover Underline
@mixin linkUnderline($underline-color: $primary-color, $size: rem(2)) {
  @include position(relative);

  &::after {
    content: "";
    position: absolute;
    bottom: em(-5);
    left: 50%;
    transform: translateX(-50%);
    background-color: $underline-color;
    width: 0%;
    height: $size;
    border-radius: rem(50);
    transition: all 0.3s ease-in-out;
  }

  &:hover {
    &::after {
      width: 100%;
    }
  }
}